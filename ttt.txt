
В шаблоне:
<a href="{% url 'task_new' projectid=project.pk %}" class="top-menu"><span class="glyphicon glyphicon-plus"></span></a>
В браузере формируется правильный URL:
http://localhost:8000/projects/projects_list/tasks_list/task_add/2
Ошибка:
Reverse for 'task_new' with no arguments not found. 1 pattern(s) tried: ['projects/projects_list/tasks_list/task_add/(?P<projectid>[0-9]+)$']
В urls.py:
path('projects_list/tasks_list/task_add/<int:projectid>', views.task_new, name='task_new'),
Если убираю во вьюхе параметр (просто для интереса), то ругается:
task_new() got an unexpected keyword argument 'projectid'

Значит, всё-таки, двойка пытается передаться во вьюху? Почему тогда в первом случае такая ошибка? ( 

==============================================

Шаблон:
        {% for prj in object_list %}
          <div class="project-entry">
              <div><h2><a href="{% url 'my_project:project_detail' prj.pk %}">{{ prj.name }}</a></h2></div>
              <div style="float: left;"><a href="{% url 'my_project:project_edit' prj.pk %}" class="top-menu"><span class="glyphicon glyphicon-edit"></span></a></div>
              <div style="float: left;"><a href="{% url 'my_project:project_delete' prj.pk %}" class="top-menu"><span class="glyphicon glyphicon-minus"></span></a></div>
          </div>
        {% endfor %}
urls.py:
urlpatterns = [
    path('', views.ProjectsHomeView.as_view(), name = 'home'),
    path('projects_list/', views.ProjectsListView.as_view(), name = 'projects'),
    path('projects_list/<int:pk>', views.ProjectsDetailView.as_view(), name = 'project_detail'),
    path('projects_list/project_add/', views.project_add, name='project_add'),
    path('projects_list/project_edit/<int:pk>', views.project_edit, name='project_edit'),
    path('projects_list/project_delete/<int:pk>', views.project_delete, name='project_delete'),
]

project_detail работает, а project_edit и project_delete - нет!
Error:
project_edit() got an unexpected keyword argument 'pk'

=====================================================

view.py:
--------
from django.views.generic import View, TemplateView, ListView, DetailView, UpdateView, DeleteView

class ProjectUpdate(UpdateView):    
    model = Project
    model_form = ProjectForm
    fields = ['name', 'description', 'assigner', 'datebegin', 'dateend']
    template_name = 'project_update.html'

urls.py:
--------
path('projects_list/project_update/<int:pk>', views.ProjectUpdate.as_view(), name = 'project_update'),

project_update.html:
--------------------

{% block project %}
    <h1>Изменить проект</h1>
    <form method="POST" class="post-form" action=""></form>
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit" class="save btn btn-primary">Сохранить</button>
    </form>
{% endblock %}

===================================